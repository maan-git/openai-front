{"ast":null,"code":"import { baseURL } from \"./OpenAI\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nclass OpenAINLP extends React.Component {\n  constructor(props) {\n    constructor(props);\n    this.urlBase = baseURL;\n  }\n  GetPetNames(specieInput) {\n    const specie = specieInput;\n    const petNames = [];\n    console.log(this.urlBase + \"nlp-pet-name/specie/\" + specie);\n    useEffect(() => {\n      axios.post(this.urlBase + \"nlp-pet-name/specie/\" + specie).then(res => {\n        petNames = res.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    }, []);\n    return petNames;\n  }\n}\n\n// function GetPetNames(specieInput)  {\n//     const urlBase = baseURL;\n//     const specie = specieInput;\n//     const petNames =[];\n//     console.log(urlBase+\"nlp-pet-name/specie/\"+specie);\n//     useEffect(() => {\n//         axios\n//             .post(this.urlBase+\"nlp-pet-name/specie/\"+specie)\n//             .then(res => {\n//                 petNames = res.data;\n//             })\n//             .catch(err => {\n//                 console.log(err);\n//             });\n//     }, []);\n// }\n\n// export {GetPetNames}","map":{"version":3,"names":["baseURL","useEffect","axios","OpenAINLP","React","Component","constructor","props","urlBase","GetPetNames","specieInput","specie","petNames","console","log","post","then","res","data","catch","err"],"sources":["/home/manoel/Documents/pessoal/studies/ChatGPT/react-test/src/services/OpenAINLP.js"],"sourcesContent":["import { baseURL } from \"./OpenAI\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\n\nclass OpenAINLP extends React.Component {\n    constructor(props) {\n        constructor(props);\n        this.urlBase = baseURL;\n    }\n\n    GetPetNames(specieInput) {\n        const specie = specieInput;\n        const petNames = [];\n        console.log(this.urlBase + \"nlp-pet-name/specie/\" + specie);\n        useEffect(() => {\n            axios\n                .post(this.urlBase + \"nlp-pet-name/specie/\" + specie)\n                .then((res) => {\n                    petNames = res.data;\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        }, []);\n        return petNames;\n    }\n}\n\n// function GetPetNames(specieInput)  {\n//     const urlBase = baseURL;\n//     const specie = specieInput;\n//     const petNames =[];\n//     console.log(urlBase+\"nlp-pet-name/specie/\"+specie);\n//     useEffect(() => {\n//         axios\n//             .post(this.urlBase+\"nlp-pet-name/specie/\"+specie)\n//             .then(res => {\n//                 petNames = res.data;\n//             })\n//             .catch(err => {\n//                 console.log(err);\n//             });\n//     }, []);\n// }\n\n// export {GetPetNames}"],"mappings":"AAAA,SAASA,OAAO,QAAQ,UAAU;AAClC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,SAASC,KAAK,CAACC,SAAS,CAAC;EACpCC,WAAW,CAACC,KAAK,EAAE;IACfD,WAAW,CAACC,KAAK,CAAC;IAClB,IAAI,CAACC,OAAO,GAAGR,OAAO;EAC1B;EAEAS,WAAW,CAACC,WAAW,EAAE;IACrB,MAAMC,MAAM,GAAGD,WAAW;IAC1B,MAAME,QAAQ,GAAG,EAAE;IACnBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,OAAO,GAAG,sBAAsB,GAAGG,MAAM,CAAC;IAC3DV,SAAS,CAAC,MAAM;MACZC,KAAK,CACAa,IAAI,CAAC,IAAI,CAACP,OAAO,GAAG,sBAAsB,GAAGG,MAAM,CAAC,CACpDK,IAAI,CAAEC,GAAG,IAAK;QACXL,QAAQ,GAAGK,GAAG,CAACC,IAAI;MACvB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;QACZP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;MACpB,CAAC,CAAC;IACV,CAAC,EAAE,EAAE,CAAC;IACN,OAAOR,QAAQ;EACnB;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}