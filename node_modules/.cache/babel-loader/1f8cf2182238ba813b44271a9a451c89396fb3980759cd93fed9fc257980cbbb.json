{"ast":null,"code":"var _jsxFileName = \"/home/manoel/Documents/pessoal/studies/ChatGPT/react-test/src/components/PetNamesResultComponent.js\";\nimport React from 'react';\nimport { baseURL } from '../services/OpenAI';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass PetNamesResultComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      response: {\n        names: [],\n        specie: \"\"\n      }\n    };\n  }\n  componentDidMount() {\n    if (this.props.specie === \"\") {\n      console.log(\"No specie selected\");\n      return;\n    }\n    axios.post(baseURL + \"nlp-pet-name-fake/specie/\" + this.props.specie).then(response => {\n      this.setState({\n        response: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n    return;\n  }\n  render() {\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-pet-names\",\n      children: [\"if(this.state.response.names.length > 0)\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Specie: \", this.state.response.specie]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n    return;\n    // const renderResponse = () => {\n    //     if(this.state.response.names.length > 0){\n    //         const res = (\n    //         <>\n    //             <p>Specie: {this.state.response.specie}</p>\n    //             <ul>\n    //                 {\n    //                 this.state.response.names.map((name) => (\n    //                         <li>{name}</li>\n    //                     ))\n    //                 }\n    //             </ul>\n    //         </>\n    //         );\n    //         return res;\n    //     }\n    //     else\n    //     {\n    //         return <p>There are no names for this specie</p>\n    //     }\n    // }\n    // return;\n  }\n}\n\nexport default PetNamesResultComponent;","map":{"version":3,"names":["React","baseURL","axios","PetNamesResultComponent","Component","constructor","props","state","response","names","specie","componentDidMount","console","log","post","then","setState","data","catch","error","render"],"sources":["/home/manoel/Documents/pessoal/studies/ChatGPT/react-test/src/components/PetNamesResultComponent.js"],"sourcesContent":["import React from 'react';\nimport {baseURL} from '../services/OpenAI';\nimport axios from 'axios';\n\nclass PetNamesResultComponent extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            response: {\n                names: [],\n                specie: \"\",\n            },\n        }\n    }\n    componentDidMount(){\n        if (this.props.specie === \"\"){\n            console.log(\"No specie selected\");\n            return;\n        }\n        axios\n         .post(baseURL + \"nlp-pet-name-fake/specie/\" + this.props.specie)\n         .then((response) => {\n            this.setState({response: response.data});\n         })\n         .catch((error) => {\n            console.log(error);\n         });\n        return;\n    }\n\n    render(){\n        \n        <div className=\"result-pet-names\">\n            \n            if(this.state.response.names.length > 0)\n            {\n                <p>Specie: {this.state.response.specie}</p>\n            }\n        \n        </div>\n        return;\n        // const renderResponse = () => {\n        //     if(this.state.response.names.length > 0){\n        //         const res = (\n        //         <>\n        //             <p>Specie: {this.state.response.specie}</p>\n        //             <ul>\n        //                 {\n        //                 this.state.response.names.map((name) => (\n        //                         <li>{name}</li>\n        //                     ))\n        //                 }\n        //             </ul>\n        //         </>\n        //         );\n        //         return res;\n        //     }\n        //     else\n        //     {\n        //         return <p>There are no names for this specie</p>\n        //     }\n        // }\n        // return;\n    }\n}\n\nexport default PetNamesResultComponent;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,OAAO,QAAO,oBAAoB;AAC1C,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,uBAAuB,SAASH,KAAK,CAACI,SAAS;EACjDC,WAAW,CAACC,KAAK,EAAC;IACd,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,QAAQ,EAAE;QACNC,KAAK,EAAE,EAAE;QACTC,MAAM,EAAE;MACZ;IACJ,CAAC;EACL;EACAC,iBAAiB,GAAE;IACf,IAAI,IAAI,CAACL,KAAK,CAACI,MAAM,KAAK,EAAE,EAAC;MACzBE,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjC;IACJ;IACAX,KAAK,CACHY,IAAI,CAACb,OAAO,GAAG,2BAA2B,GAAG,IAAI,CAACK,KAAK,CAACI,MAAM,CAAC,CAC/DK,IAAI,CAAEP,QAAQ,IAAK;MACjB,IAAI,CAACQ,QAAQ,CAAC;QAACR,QAAQ,EAAEA,QAAQ,CAACS;MAAI,CAAC,CAAC;IAC3C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACfP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;IACrB,CAAC,CAAC;IACH;EACJ;EAEAC,MAAM,GAAE;IAEJ;MAAK,SAAS,EAAC,kBAAkB;MAAA,WAAC,0CAG9B,eACI;QAAA,WAAG,UAAQ,EAAC,IAAI,CAACb,KAAK,CAACC,QAAQ,CAACE,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAG7C;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ;AACJ;;AAEA,eAAeP,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}