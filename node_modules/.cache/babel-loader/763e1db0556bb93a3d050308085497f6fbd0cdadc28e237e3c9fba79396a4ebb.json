{"ast":null,"code":"import { baseURL } from \"./OpenAI\";\nimport React from \"react\";\nimport axios from \"axios\";\nclass OpenAINLP extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      urlBase: baseURL,\n      petNames: [],\n      petSpecie: ''\n    };\n  }\n\n  // GetPetNames() {\n  //     console.log(this.urlBase + \"nlp-pet-name/specie/\" + this.petSpecie);\n  //     useEffect(() => {\n  //         axios\n  //             .post(this.urlBase + \"nlp-pet-name/specie/\" + this.petSpecie)\n  //             .then((res) => {\n  //                 this.setState({ petNames: res.data });\n  //             })\n  //             .catch((err) => {\n  //                 console.log(err);\n  //             });\n  //     }, []);\n  // }\n\n  GetPetNames(specieInput) {\n    this.setState({\n      petSpecie: specieInput\n    });\n    console.log(this.urlBase + \"nlp-pet-name/specie/\" + this.petSpecie);\n    axios.post(this.urlBase + \"nlp-pet-name/specie/\" + this.petSpecie).then(response => {\n      this.setState({\n        petNames: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n    return this.state.petNames;\n  }\n}\nexport default OpenAINLP;\n\n// function GetPetNames(specieInput)  {\n//     const urlBase = baseURL;\n//     const specie = specieInput;\n//     const petNames =[];\n//     console.log(urlBase+\"nlp-pet-name/specie/\"+specie);\n//     useEffect(() => {\n//         axios\n//             .post(this.urlBase+\"nlp-pet-name/specie/\"+specie)\n//             .then(res => {\n//                 petNames = res.data;\n//             })\n//             .catch(err => {\n//                 console.log(err);\n//             });\n//     }, []);\n// }\n\n// export {GetPetNames}","map":{"version":3,"names":["baseURL","React","axios","OpenAINLP","Component","constructor","props","state","urlBase","petNames","petSpecie","GetPetNames","specieInput","setState","console","log","post","then","response","data","catch","error"],"sources":["/home/manoel/Documents/pessoal/studies/ChatGPT/react-test/src/services/OpenAINLP.js"],"sourcesContent":["import { baseURL } from \"./OpenAI\";\nimport React from \"react\";\nimport axios from \"axios\";\n\nclass OpenAINLP extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            urlBase: baseURL,\n            petNames: [],\n            petSpecie: '',\n        };\n    }\n\n    // GetPetNames() {\n    //     console.log(this.urlBase + \"nlp-pet-name/specie/\" + this.petSpecie);\n    //     useEffect(() => {\n    //         axios\n    //             .post(this.urlBase + \"nlp-pet-name/specie/\" + this.petSpecie)\n    //             .then((res) => {\n    //                 this.setState({ petNames: res.data });\n    //             })\n    //             .catch((err) => {\n    //                 console.log(err);\n    //             });\n    //     }, []);\n    // }\n\n    GetPetNames(specieInput) {\n        this.setState({ petSpecie: specieInput });\n        console.log(this.urlBase + \"nlp-pet-name/specie/\" + this.petSpecie);\n        axios\n         .post(this.urlBase + \"nlp-pet-name/specie/\" + this.petSpecie)\n         .then((response) => {\n            this.setState({ petNames: response.data });\n         })\n         .catch((error) => {\n            console.log(error);\n         });\n\n         return this.state.petNames;\n    }\n}\nexport default OpenAINLP;\n\n// function GetPetNames(specieInput)  {\n//     const urlBase = baseURL;\n//     const specie = specieInput;\n//     const petNames =[];\n//     console.log(urlBase+\"nlp-pet-name/specie/\"+specie);\n//     useEffect(() => {\n//         axios\n//             .post(this.urlBase+\"nlp-pet-name/specie/\"+specie)\n//             .then(res => {\n//                 petNames = res.data;\n//             })\n//             .catch(err => {\n//                 console.log(err);\n//             });\n//     }, []);\n// }\n\n// export {GetPetNames}"],"mappings":"AAAA,SAASA,OAAO,QAAQ,UAAU;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,SAASF,KAAK,CAACG,SAAS,CAAC;EACpCC,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,OAAO,EAAER,OAAO;MAChBS,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE;IACf,CAAC;EACL;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAC,WAAW,CAACC,WAAW,EAAE;IACrB,IAAI,CAACC,QAAQ,CAAC;MAAEH,SAAS,EAAEE;IAAY,CAAC,CAAC;IACzCE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,OAAO,GAAG,sBAAsB,GAAG,IAAI,CAACE,SAAS,CAAC;IACnER,KAAK,CACHc,IAAI,CAAC,IAAI,CAACR,OAAO,GAAG,sBAAsB,GAAG,IAAI,CAACE,SAAS,CAAC,CAC5DO,IAAI,CAAEC,QAAQ,IAAK;MACjB,IAAI,CAACL,QAAQ,CAAC;QAAEJ,QAAQ,EAAES,QAAQ,CAACC;MAAK,CAAC,CAAC;IAC7C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACfP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;IACrB,CAAC,CAAC;IAEF,OAAO,IAAI,CAACd,KAAK,CAACE,QAAQ;EAC/B;AACJ;AACA,eAAeN,SAAS;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}