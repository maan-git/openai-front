{"ast":null,"code":"var _jsxFileName = \"/home/manoel/Documents/pessoal/studies/ChatGPT/react-test/src/components/ImageGenerateFormComponent.js\";\nimport { React, useEffect } from 'react';\nimport { api, baseURL } from '../services/OpenAI';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ImageGeneratorForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      value: '',\n      url: '',\n      urlBase: baseURL\n    };\n  }\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    const response = this.consultImageGenerator();\n    console.log(response);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container-form\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          name: \"image-form\",\n          id: \"image-form\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Image the descripitons:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"image-description\",\n            id: \"image-description\",\n            value: this.state.value,\n            onChange: this.handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"submit-buttom\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-image-generated\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.url,\n          alt: this.state.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n  consultImageGenerator() {\n    if (this.state.value === '') {\n      return;\n    }\n    try {\n      const url = this.state.urlBase + \"cv-image-generator/description/\" + this.state.value;\n      useEffect(() => {\n        fetch(url).then(res => res.json()).then(data => {\n          this.setState({\n            url: data.url\n          });\n        }).catch(err => console.log(err));\n      }, []);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\nexport default ImageGeneratorForm;","map":{"version":3,"names":["React","useEffect","api","baseURL","ImageGeneratorForm","Component","constructor","props","handleChange","bind","handleSubmit","state","value","url","urlBase","event","setState","target","preventDefault","response","consultImageGenerator","console","log","render","fetch","then","res","json","data","catch","err","e"],"sources":["/home/manoel/Documents/pessoal/studies/ChatGPT/react-test/src/components/ImageGenerateFormComponent.js"],"sourcesContent":["import {React, useEffect} from 'react';\nimport {api, baseURL} from '../services/OpenAI';\n\nclass ImageGeneratorForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n            value: '',\n            url: '',\n            urlBase: baseURL,\n        };\n    }\n\n    handleChange(event){\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        const response = this.consultImageGenerator();\n        console.log(response);\n    }\n\n    render(){\n        return (\n            <>\n            <div className=\"image-container-form\">\n            <form name=\"image-form\" id=\"image-form\" onSubmit={this.handleSubmit}>\n                <label>\n                Image the descripitons:\n                </label>\n                <input  type=\"text\" \n                        name=\"image-description\" \n                        id=\"image-description\"\n                        value={this.state.value} \n                        onChange={this.handleChange}\n                        required />\n                <label className='submit-buttom'>\n                <input type=\"submit\" value=\"Submit\" />\n                </label>\n            </form>\n            </div>\n            <div className=\"result-image-generated\">\n                <img src={this.state.url} alt={this.state.value} />\n            </div>\n            </>\n        )\n    }\n\n    consultImageGenerator(){\n        if (this.state.value === ''){\n            return;\n        }\n        try {\n            const url = this.state.urlBase+\"cv-image-generator/description/\"+this.state.value;\n            useEffect(() => {\n                fetch(url)\n                .then(res => res.json())\n                .then(data => {\n                    this.setState({url: data.url});\n                })\n                .catch(err => console.log(err));\n            }, []);\n          } catch (e) {\n            console.log(e);\n          }\n    }\n\n}\n\nexport default ImageGeneratorForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}