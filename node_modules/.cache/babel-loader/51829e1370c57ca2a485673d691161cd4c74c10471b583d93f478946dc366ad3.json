{"ast":null,"code":"var _jsxFileName = \"/home/manoel/Documents/pessoal/studies/ChatGPT/react-test/src/components/PetNamesResultComponent.js\";\nimport React from 'react';\nimport { baseURL } from '../services/OpenAI';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass PetNamesResultComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      names: [],\n      specie: \"\"\n    };\n  }\n  componentDidMount() {\n    if (this.props.specie === \"\") {\n      console.log(\"No specie selected\");\n      return;\n    }\n    axios.post(baseURL + \"nlp-pet-name-fake/specie/\" + this.props.specie).then(response => {\n      this.setState({\n        names: response.data.names,\n        specie: response.data.specie\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n    return;\n  }\n  render() {\n    if (this.state.names.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-pet-names\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Specie: \", this.state.specie]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.response.names.map(name => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-pet-names\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"There are no names for this specie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this);\n    }\n  }\n}\nexport default PetNamesResultComponent;","map":{"version":3,"names":["React","baseURL","axios","PetNamesResultComponent","Component","constructor","props","state","names","specie","componentDidMount","console","log","post","then","response","setState","data","catch","error","render","length","map","name"],"sources":["/home/manoel/Documents/pessoal/studies/ChatGPT/react-test/src/components/PetNamesResultComponent.js"],"sourcesContent":["import React from 'react';\nimport {baseURL} from '../services/OpenAI';\nimport axios from 'axios';\n\nclass PetNamesResultComponent extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            names: [],\n            specie: \"\",\n        }\n    }\n    componentDidMount(){\n        if (this.props.specie === \"\"){\n            console.log(\"No specie selected\");\n            return;\n        }\n        axios\n         .post(baseURL + \"nlp-pet-name-fake/specie/\" + this.props.specie)\n         .then((response) => {\n            this.setState({\n                names: response.data.names, \n                specie: response.data.specie\n            });\n         })\n         .catch((error) => {\n            console.log(error);\n         });\n        return;\n    }\n\n    render(){\n        if(this.state.names.length > 0){\n            return (\n                <div className=\"result-pet-names\">\n                    <p>Specie: {this.state.specie}</p>\n                    <ul>\n                        {\n                        this.state.response.names.map((name) => (\n                                <li>{name}</li>\n                            ))  \n                        }\n                    </ul>\n                </div>\n            )\n        }else{\n            return (\n                <div className=\"result-pet-names\">\n                    <p>There are no names for this specie</p>\n                </div>\n            )\n        }\n        \n    }\n}\n\nexport default PetNamesResultComponent;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,OAAO,QAAO,oBAAoB;AAC1C,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,uBAAuB,SAASH,KAAK,CAACI,SAAS;EACjDC,WAAW,CAACC,KAAK,EAAC;IACd,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE;IACZ,CAAC;EACL;EACAC,iBAAiB,GAAE;IACf,IAAI,IAAI,CAACJ,KAAK,CAACG,MAAM,KAAK,EAAE,EAAC;MACzBE,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjC;IACJ;IACAV,KAAK,CACHW,IAAI,CAACZ,OAAO,GAAG,2BAA2B,GAAG,IAAI,CAACK,KAAK,CAACG,MAAM,CAAC,CAC/DK,IAAI,CAAEC,QAAQ,IAAK;MACjB,IAAI,CAACC,QAAQ,CAAC;QACVR,KAAK,EAAEO,QAAQ,CAACE,IAAI,CAACT,KAAK;QAC1BC,MAAM,EAAEM,QAAQ,CAACE,IAAI,CAACR;MAC1B,CAAC,CAAC;IACL,CAAC,CAAC,CACDS,KAAK,CAAEC,KAAK,IAAK;MACfR,OAAO,CAACC,GAAG,CAACO,KAAK,CAAC;IACrB,CAAC,CAAC;IACH;EACJ;EAEAC,MAAM,GAAE;IACJ,IAAG,IAAI,CAACb,KAAK,CAACC,KAAK,CAACa,MAAM,GAAG,CAAC,EAAC;MAC3B,oBACI;QAAK,SAAS,EAAC,kBAAkB;QAAA,wBAC7B;UAAA,WAAG,UAAQ,EAAC,IAAI,CAACd,KAAK,CAACE,MAAM;QAAA;UAAA;UAAA;UAAA;QAAA,QAAK,eAClC;UAAA,UAEI,IAAI,CAACF,KAAK,CAACQ,QAAQ,CAACP,KAAK,CAACc,GAAG,CAAEC,IAAI,iBAC3B;YAAA,UAAKA;UAAI;YAAA;YAAA;YAAA;UAAA,QACZ;QAAC;UAAA;UAAA;UAAA;QAAA,QAEL;MAAA;QAAA;QAAA;QAAA;MAAA,QACH;IAEd,CAAC,MAAI;MACD,oBACI;QAAK,SAAS,EAAC,kBAAkB;QAAA,uBAC7B;UAAA,UAAG;QAAkC;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QACvC;IAEd;EAEJ;AACJ;AAEA,eAAepB,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}