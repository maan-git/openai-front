{"ast":null,"code":"var _jsxFileName = \"/home/manoel/Documents/pessoal/studies/ChatGPT/react-test/src/components/ImageGenerateFormComponent.js\";\nimport React from 'react';\nimport api from '../services/OpenAI';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ImageGeneratorForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      value: '',\n      url: '',\n      api: api\n    };\n  }\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n  handleSubmit(event) {\n    console.log('Submit: ' + this.state.value);\n    event.preventDefault();\n    this.consultImageGenerator();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container-form\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          name: \"image-form\",\n          id: \"image-form\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Image the descripitons:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"image-description\",\n            id: \"image-description\",\n            value: this.state.value,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"submit-buttom\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-image-generated\",\n        children: [\"asd\", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.url,\n          alt: this.state.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n  consultImageGenerator() {\n    if (this.state.value === '') {\n      return;\n    } else {\n      this.state.api.post(\"cv-image-generator/description/\" + this.state.value).then(res => {\n        this.setState({\n          value: this.state.value\n        });\n        this.setState({\n          url: res.data[0].url\n        });\n      });\n    }\n    return;\n  }\n}\nexport default ImageGeneratorForm;","map":{"version":3,"names":["React","api","ImageGeneratorForm","Component","constructor","props","handleChange","bind","handleSubmit","state","value","url","event","setState","target","console","log","preventDefault","consultImageGenerator","render","post","then","res","data"],"sources":["/home/manoel/Documents/pessoal/studies/ChatGPT/react-test/src/components/ImageGenerateFormComponent.js"],"sourcesContent":["import React from 'react';\nimport api from '../services/OpenAI';\n\nclass ImageGeneratorForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n            value: '',\n            url: '',\n            api: api,\n        };\n    }\n\n    handleChange(event){\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit(event){\n        console.log('Submit: ' + this.state.value);\n        event.preventDefault();\n        this.consultImageGenerator();\n    }\n\n    render(){\n        return (\n            <>\n            <div className=\"image-container-form\">\n            <form name=\"image-form\" id=\"image-form\" onSubmit={this.handleSubmit}>\n                <label>\n                Image the descripitons:\n                </label>\n                <input  type=\"text\" \n                        name=\"image-description\" \n                        id=\"image-description\"\n                        value={this.state.value} onChange={this.handleChange} />\n                <label className='submit-buttom'>\n                <input type=\"submit\" value=\"Submit\" />\n                </label>\n            </form>\n            </div>\n            <div className=\"result-image-generated\">\n                asd\n                <img src={this.state.url} alt={this.state.value} />\n            </div>\n            </>\n        )\n    }\n\n    consultImageGenerator(){\n        if (this.state.value === ''){\n            return;\n        }\n        else\n        {\n            this.state.api.post(\"cv-image-generator/description/\"+this.state.value).then(\n                res =>{\n                    this.setState({ value: this.state.value });\n                    this.setState({ url: res.data[0].url});\n                });\n        }\n        \n        return;\n    }\n\n}\n\nexport default ImageGeneratorForm;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,oBAAoB;AAAC;AAAA;AAErC,MAAMC,kBAAkB,SAASF,KAAK,CAACG,SAAS;EAC5CC,WAAW,CAACC,KAAK,EAAC;IACd,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACD,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,CAACE,KAAK,GAAG;MACTC,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE,EAAE;MACPV,GAAG,EAAEA;IACT,CAAC;EACL;EAEAK,YAAY,CAACM,KAAK,EAAC;IACf,IAAI,CAACC,QAAQ,CAAC;MAACH,KAAK,EAAEE,KAAK,CAACE,MAAM,CAACJ;IAAK,CAAC,CAAC;EAC9C;EAEAF,YAAY,CAACI,KAAK,EAAC;IACfG,OAAO,CAACC,GAAG,CAAC,UAAU,GAAG,IAAI,CAACP,KAAK,CAACC,KAAK,CAAC;IAC1CE,KAAK,CAACK,cAAc,EAAE;IACtB,IAAI,CAACC,qBAAqB,EAAE;EAChC;EAEAC,MAAM,GAAE;IACJ,oBACI;MAAA,wBACA;QAAK,SAAS,EAAC,sBAAsB;QAAA,uBACrC;UAAM,IAAI,EAAC,YAAY;UAAC,EAAE,EAAC,YAAY;UAAC,QAAQ,EAAE,IAAI,CAACX,YAAa;UAAA,wBAChE;YAAA,UAAO;UAEP;YAAA;YAAA;YAAA;UAAA,QAAQ,eACR;YAAQ,IAAI,EAAC,MAAM;YACX,IAAI,EAAC,mBAAmB;YACxB,EAAE,EAAC,mBAAmB;YACtB,KAAK,EAAE,IAAI,CAACC,KAAK,CAACC,KAAM;YAAC,QAAQ,EAAE,IAAI,CAACJ;UAAa;YAAA;YAAA;YAAA;UAAA,QAAG,eAChE;YAAO,SAAS,EAAC,eAAe;YAAA,uBAChC;cAAO,IAAI,EAAC,QAAQ;cAAC,KAAK,EAAC;YAAQ;cAAA;cAAA;cAAA;YAAA;UAAG;YAAA;YAAA;YAAA;UAAA,QAC9B;QAAA;UAAA;UAAA;UAAA;QAAA;MACL;QAAA;QAAA;QAAA;MAAA,QACD,eACN;QAAK,SAAS,EAAC,wBAAwB;QAAA,WAAC,KAEpC;UAAK,GAAG,EAAE,IAAI,CAACG,KAAK,CAACE,GAAI;UAAC,GAAG,EAAE,IAAI,CAACF,KAAK,CAACC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACjD;IAAA,gBACH;EAEX;EAEAQ,qBAAqB,GAAE;IACnB,IAAI,IAAI,CAACT,KAAK,CAACC,KAAK,KAAK,EAAE,EAAC;MACxB;IACJ,CAAC,MAED;MACI,IAAI,CAACD,KAAK,CAACR,GAAG,CAACmB,IAAI,CAAC,iCAAiC,GAAC,IAAI,CAACX,KAAK,CAACC,KAAK,CAAC,CAACW,IAAI,CACxEC,GAAG,IAAG;QACF,IAAI,CAACT,QAAQ,CAAC;UAAEH,KAAK,EAAE,IAAI,CAACD,KAAK,CAACC;QAAM,CAAC,CAAC;QAC1C,IAAI,CAACG,QAAQ,CAAC;UAAEF,GAAG,EAAEW,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAACZ;QAAG,CAAC,CAAC;MAC1C,CAAC,CAAC;IACV;IAEA;EACJ;AAEJ;AAEA,eAAeT,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}