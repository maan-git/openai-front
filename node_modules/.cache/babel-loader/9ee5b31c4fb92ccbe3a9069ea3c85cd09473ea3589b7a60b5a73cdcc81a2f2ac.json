{"ast":null,"code":"var _jsxFileName = \"/home/manoel/Documents/pessoal/studies/ChatGPT/react-test/src/services/OpenAIPetNames.js\";\nimport { Component, useState } from \"react\";\nimport api from \"./OpenAI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getPetNames(specieIn) {\n  const petNames = [];\n  const specie = specieIn;\n  makeOpenAIRequest(specie).then(response => {\n    this.petNames = response.names;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-pet-names\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [console.log(petNames), console.log(specie)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\nfunction makeOpenAIRequest(specieIn) {\n  const state = {\n    petNames: [],\n    specie: ''\n  };\n  return api.post(\"nlp-pet-name/specie/\" + specieIn).then(res => {\n    const specie = res.data.specie;\n    this.setState({\n      specie\n    });\n    const petNames = res.data.names;\n    this.setState({\n      petNames\n    });\n  });\n\n  // return api\n  //   .post(\"nlp-pet-name/specie/\"+specie)\n  //   .then((response) => response.data)\n  //   .catch((err) => {\n  //     console.error(\"ops! ocorreu um erro\" + err);\n  //   });\n}\n\nclass OpenAIPetNames extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      petNames: [],\n      specie: ''\n    };\n    this.api = api;\n  }\n  componentDidMount(specie) {\n    this.api.post(\"nlp-pet-name/specie/\" + specie).then(res => {\n      console.log(res.data);\n      const specie = res.data.specie;\n      this.setState({\n        specie\n      });\n      const petNames = res.data.names;\n      this.setState({\n        petNames\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-pet-names\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [console.log(this.state.petNames), console.log(this.state.specie)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this);\n  }\n  // getPetNames(specie) {\n  //     this.api.post(\"nlp-pet-name/specie/\"+specie).then(\n  //       res =>{\n  //         console.log(res.data);\n  //         const specie = res.data.specie;\n  //         this.setState({ specie });\n\n  //         const petNames = res.data.names;\n  //         this.setState({ petNames });\n\n  //     });\n  //     return this.render();\n  //   }  \n  // getHealthCheck() {\n  //   return this.api\n  //     .get(\"health-check\")\n  //     .then((response) => response.data)\n  //     .catch((err) => {\n  //       console.error(\"ops! ocorreu um erro\" + err);\n  //     });\n  // }\n}\n\nexport default getPetNames;","map":{"version":3,"names":["Component","useState","api","getPetNames","specieIn","petNames","specie","makeOpenAIRequest","then","response","names","console","log","state","post","res","data","setState","OpenAIPetNames","componentDidMount","render"],"sources":["/home/manoel/Documents/pessoal/studies/ChatGPT/react-test/src/services/OpenAIPetNames.js"],"sourcesContent":["import { Component, useState } from \"react\";\nimport api from \"./OpenAI\";\n\nfunction getPetNames(specieIn) {\n  const petNames = [];\n  const specie = specieIn;\n  makeOpenAIRequest(specie).then((response) => {\n    this.petNames = response.names;\n  });\n\n  return(\n    <div className=\"result-pet-names\">\n      <ul>\n        {console.log(petNames)}\n        {console.log(specie)}\n        {/* {this.state.petNames.map(petName => <li>{petName.names}</li>)} */}\n      </ul>\n    </div>\n  )\n\n}\n\nfunction makeOpenAIRequest(specieIn){\n  const state = {\n    petNames: [],\n    specie: '',\n  }\n\n  return api.post(\"nlp-pet-name/specie/\"+specieIn).then(\n    res =>{\n      const specie = res.data.specie;\n      this.setState({ specie });\n\n      const petNames = res.data.names;\n      this.setState({ petNames });\n  })\n\n  // return api\n  //   .post(\"nlp-pet-name/specie/\"+specie)\n  //   .then((response) => response.data)\n  //   .catch((err) => {\n  //     console.error(\"ops! ocorreu um erro\" + err);\n  //   });\n}\n\n\nclass OpenAIPetNames extends Component {\n    state = {\n        petNames: [],\n        specie: '',\n    }\n    api = api;\n\n    componentDidMount(specie) {\n        this.api.post(\"nlp-pet-name/specie/\"+specie).then(\n          res =>{\n            console.log(res.data);\n            const specie = res.data.specie;\n            this.setState({ specie });\n\n            const petNames = res.data.names;\n            this.setState({ petNames });\n            \n        })\n    }\n\n    render(){\n      return(\n        <div className=\"result-pet-names\">\n          <ul>\n            {console.log(this.state.petNames)}\n            {console.log(this.state.specie)}\n            {/* {this.state.petNames.map(petName => <li>{petName.names}</li>)} */}\n          </ul>\n        </div>\n      )\n    }\n    // getPetNames(specie) {\n    //     this.api.post(\"nlp-pet-name/specie/\"+specie).then(\n    //       res =>{\n    //         console.log(res.data);\n    //         const specie = res.data.specie;\n    //         this.setState({ specie });\n\n    //         const petNames = res.data.names;\n    //         this.setState({ petNames });\n            \n    //     });\n    //     return this.render();\n    //   }  \n    // getHealthCheck() {\n    //   return this.api\n    //     .get(\"health-check\")\n    //     .then((response) => response.data)\n    //     .catch((err) => {\n    //       console.error(\"ops! ocorreu um erro\" + err);\n    //     });\n    // }\n}\n\nexport default getPetNames;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,UAAU;AAAC;AAE3B,SAASC,WAAW,CAACC,QAAQ,EAAE;EAC7B,MAAMC,QAAQ,GAAG,EAAE;EACnB,MAAMC,MAAM,GAAGF,QAAQ;EACvBG,iBAAiB,CAACD,MAAM,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;IAC3C,IAAI,CAACJ,QAAQ,GAAGI,QAAQ,CAACC,KAAK;EAChC,CAAC,CAAC;EAEF,oBACE;IAAK,SAAS,EAAC,kBAAkB;IAAA,uBAC/B;MAAA,WACGC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC,EACrBM,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA;EAEjB;IAAA;IAAA;IAAA;EAAA,QACD;AAGV;AAEA,SAASC,iBAAiB,CAACH,QAAQ,EAAC;EAClC,MAAMS,KAAK,GAAG;IACZR,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE;EACV,CAAC;EAED,OAAOJ,GAAG,CAACY,IAAI,CAAC,sBAAsB,GAACV,QAAQ,CAAC,CAACI,IAAI,CACnDO,GAAG,IAAG;IACJ,MAAMT,MAAM,GAAGS,GAAG,CAACC,IAAI,CAACV,MAAM;IAC9B,IAAI,CAACW,QAAQ,CAAC;MAAEX;IAAO,CAAC,CAAC;IAEzB,MAAMD,QAAQ,GAAGU,GAAG,CAACC,IAAI,CAACN,KAAK;IAC/B,IAAI,CAACO,QAAQ,CAAC;MAAEZ;IAAS,CAAC,CAAC;EAC/B,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;AACF;;AAGA,MAAMa,cAAc,SAASlB,SAAS,CAAC;EAAA;IAAA;IAAA,KACnCa,KAAK,GAAG;MACJR,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;IACZ,CAAC;IAAA,KACDJ,GAAG,GAAGA,GAAG;EAAA;EAETiB,iBAAiB,CAACb,MAAM,EAAE;IACtB,IAAI,CAACJ,GAAG,CAACY,IAAI,CAAC,sBAAsB,GAACR,MAAM,CAAC,CAACE,IAAI,CAC/CO,GAAG,IAAG;MACJJ,OAAO,CAACC,GAAG,CAACG,GAAG,CAACC,IAAI,CAAC;MACrB,MAAMV,MAAM,GAAGS,GAAG,CAACC,IAAI,CAACV,MAAM;MAC9B,IAAI,CAACW,QAAQ,CAAC;QAAEX;MAAO,CAAC,CAAC;MAEzB,MAAMD,QAAQ,GAAGU,GAAG,CAACC,IAAI,CAACN,KAAK;MAC/B,IAAI,CAACO,QAAQ,CAAC;QAAEZ;MAAS,CAAC,CAAC;IAE/B,CAAC,CAAC;EACN;EAEAe,MAAM,GAAE;IACN,oBACE;MAAK,SAAS,EAAC,kBAAkB;MAAA,uBAC/B;QAAA,WACGT,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,KAAK,CAACR,QAAQ,CAAC,EAChCM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,KAAK,CAACP,MAAM,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA;IAE5B;MAAA;MAAA;MAAA;IAAA,QACD;EAEV;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;;AAEA,eAAeH,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}