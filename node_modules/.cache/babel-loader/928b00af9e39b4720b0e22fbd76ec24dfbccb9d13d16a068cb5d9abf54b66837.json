{"ast":null,"code":"import { Component } from \"react\";\nimport api from \"./OpenAI\";\nexport default class OpenAINLP extends Component {\n  componentDidMount() {\n    this.api.get(\"health-check\").then(res => {\n      const health = res.data;\n      this.setState({\n        health\n      });\n    });\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      petNames: []\n    };\n    this.api = api;\n    this.api = api;\n  }\n  getPetNames(specie) {\n    return this.api.post(\"nlp-pet-name\", {\n      specie: specie\n    }).then(response => response.data).catch(err => {\n      console.error(\"ops! ocorreu um erro\" + err);\n    });\n  }\n  getHealthCheck() {\n    return this.api.get(\"health-check\").then(response => response.data).catch(err => {\n      console.error(\"ops! ocorreu um erro\" + err);\n    });\n  }\n}","map":{"version":3,"names":["Component","api","OpenAINLP","componentDidMount","get","then","res","health","data","setState","constructor","props","state","petNames","getPetNames","specie","post","response","catch","err","console","error","getHealthCheck"],"sources":["/home/manoel/Documents/pessoal/studies/ChatGPT/react-test/src/services/OpenAINLP.js"],"sourcesContent":["import { Component } from \"react\";\nimport api from \"./OpenAI\";\n\nexport default class OpenAINLP extends Component {\n    state = {\n        petNames: [],\n    }\n    api = api;\n\n    componentDidMount() {\n      this.api.get(\"health-check\").then(res => {\n        const health = res.data;\n        this.setState({ health });\n      })\n    }\n\n    constructor(props) {\n        super(props);\n        this.api = api;\n    }\n\n    getPetNames(specie) {\n        return this.api\n        .post(\"nlp-pet-name\",{\n          specie: specie\n        })\n        .then((response) => response.data)\n        .catch((err) => {\n            console.error(\"ops! ocorreu um erro\" + err);\n        });\n    }\n  \n    getHealthCheck() {\n      return this.api\n        .get(\"health-check\")\n        .then((response) => response.data)\n        .catch((err) => {\n          console.error(\"ops! ocorreu um erro\" + err);\n        });\n    }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,GAAG,MAAM,UAAU;AAE1B,eAAe,MAAMC,SAAS,SAASF,SAAS,CAAC;EAM7CG,iBAAiB,GAAG;IAClB,IAAI,CAACF,GAAG,CAACG,GAAG,CAAC,cAAc,CAAC,CAACC,IAAI,CAACC,GAAG,IAAI;MACvC,MAAMC,MAAM,GAAGD,GAAG,CAACE,IAAI;MACvB,IAAI,CAACC,QAAQ,CAAC;QAAEF;MAAO,CAAC,CAAC;IAC3B,CAAC,CAAC;EACJ;EAEAG,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAC,KAbjBC,KAAK,GAAG;MACJC,QAAQ,EAAE;IACd,CAAC;IAAA,KACDZ,GAAG,GAAGA,GAAG;IAWL,IAAI,CAACA,GAAG,GAAGA,GAAG;EAClB;EAEAa,WAAW,CAACC,MAAM,EAAE;IAChB,OAAO,IAAI,CAACd,GAAG,CACde,IAAI,CAAC,cAAc,EAAC;MACnBD,MAAM,EAAEA;IACV,CAAC,CAAC,CACDV,IAAI,CAAEY,QAAQ,IAAKA,QAAQ,CAACT,IAAI,CAAC,CACjCU,KAAK,CAAEC,GAAG,IAAK;MACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,GAAGF,GAAG,CAAC;IAC/C,CAAC,CAAC;EACN;EAEAG,cAAc,GAAG;IACf,OAAO,IAAI,CAACrB,GAAG,CACZG,GAAG,CAAC,cAAc,CAAC,CACnBC,IAAI,CAAEY,QAAQ,IAAKA,QAAQ,CAACT,IAAI,CAAC,CACjCU,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,KAAK,CAAC,sBAAsB,GAAGF,GAAG,CAAC;IAC7C,CAAC,CAAC;EACN;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}